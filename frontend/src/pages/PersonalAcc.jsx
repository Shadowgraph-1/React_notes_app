import React, { useState, useEffect } from "react";
import "../components/PersonalAcc.css";

// SVG –∏–∫–æ–Ω–∫–∏
const ViewIcon = () => (
  <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2">
    <path d="M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z"/>
    <circle cx="12" cy="12" r="3"/>
  </svg>
);

const EditIcon = () => (
  <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2">
    <path d="M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7"/>
    <path d="m18.5 2.5 3 3L12 15l-4 1 1-4 9.5-9.5z"/>
  </svg>
);

const DeleteIcon = () => (
  <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2">
    <polyline points="3,6 5,6 21,6"/>
    <path d="m19,6v14a2,2 0 0,1 -2,2H7a2,2 0 0,1 -2,-2V6m3,0V4a2,2 0 0,1 2,-2h4a2,2 0 0,1 2,2v2"/>
    <line x1="10" y1="11" x2="10" y2="17"/>
    <line x1="14" y1="11" x2="14" y2="17"/>
  </svg>
);

const HomeIcon = () => (
  <svg width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2">
    <path d="m3 9 9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z"/>
    <polyline points="9,22 9,12 15,12 15,22"/>
  </svg>
);

const CloseIcon = () => (
  <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2">
    <line x1="18" y1="6" x2="6" y2="18"/>
    <line x1="6" y1="6" x2="18" y2="18"/>
  </svg>
);

function PersonalAccount() {
  const [username, setUsername] = useState("");
  const [notes, setNotes] = useState([
    { 
      id: 1, 
      title: "–ü–ª–∞–Ω—ã –Ω–∞ –Ω–µ–¥–µ–ª—é", 
      content: "–ó–∞–∫–æ–Ω—á–∏—Ç—å –ø—Ä–æ–µ–∫—Ç –ø–æ –≤–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ\n–í—Å—Ç—Ä–µ—á–∞ —Å –∫–æ–º–∞–Ω–¥–æ–π –≤ –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫\n–ò–∑—É—á–∏—Ç—å –Ω–æ–≤—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏: React Hooks\n–ü–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—é –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞", 
      date: "2025-06-18" 
    },
    { 
      id: 2, 
      title: "–°–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫", 
      content: "–ü—Ä–æ–¥—É–∫—Ç—ã:\n‚Ä¢ –ú–æ–ª–æ–∫–æ 2% –∂–∏—Ä–Ω–æ—Å—Ç–∏\n‚Ä¢ –•–ª–µ–± —á–µ—Ä–Ω—ã–π\n‚Ä¢ –Ø–π—Ü–∞ –∫—É—Ä–∏–Ω—ã–µ (–¥–µ—Å—è—Ç–æ–∫)\n‚Ä¢ –§—Ä—É–∫—Ç—ã: —è–±–ª–æ–∫–∏, –±–∞–Ω–∞–Ω—ã\n‚Ä¢ –û–≤–æ—â–∏ –¥–ª—è —Å–∞–ª–∞—Ç–∞\n‚Ä¢ –ö—Ä—É–ø—ã: –≥—Ä–µ—á–∫–∞, —Ä–∏—Å", 
      date: "2025-06-17" 
    },
    { 
      id: 3, 
      title: "–ò–¥–µ–∏ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞", 
      content: "–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª:\n‚Ä¢ –î–æ–±–∞–≤–∏—Ç—å —Ç–µ–º–Ω—É—é —Ç–µ–º—É –¥–ª—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞\n‚Ä¢ –£–ª—É—á—à–∏—Ç—å –º–æ–±–∏–ª—å–Ω—É—é –≤–µ—Ä—Å–∏—é\n‚Ä¢ –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∑–∞–≥—Ä—É–∑–∫—É –¥–∞–Ω–Ω—ã—Ö\n‚Ä¢ –î–æ–±–∞–≤–∏—Ç—å —Å–∏—Å—Ç–µ–º—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π\n‚Ä¢ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –∫–∞–ª–µ–Ω–¥–∞—Ä–µ–º", 
      date: "2025-06-16" 
    },
    { 
      id: 4, 
      title: "–ö–Ω–∏–≥–∏ –∫ –ø—Ä–æ—á—Ç–µ–Ω–∏—é", 
      content: "–°–ø–∏—Å–æ–∫ –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä—ã –¥–ª—è —Ä–∞–∑–≤–∏—Ç–∏—è:\n‚Ä¢ '–ß–∏—Å—Ç—ã–π –∫–æ–¥' - –†–æ–±–µ—Ä—Ç –ú–∞—Ä—Ç–∏–Ω\n‚Ä¢ 'JavaScript: –ø–æ–ª–Ω–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ'\n‚Ä¢ 'React –≤ –¥–µ–π—Å—Ç–≤–∏–∏'\n‚Ä¢ '–ê–ª–≥–æ—Ä–∏—Ç–º—ã –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö'\n‚Ä¢ '–ü–∞—Ç—Ç–µ—Ä–Ω—ã –ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è'", 
      date: "2025-06-15" 
    },
    { 
      id: 5, 
      title: "–ü—Ä–æ–≥—Ä–∞–º–º–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫", 
      content: "–ù–µ–¥–µ–ª—å–Ω—ã–π –ø–ª–∞–Ω:\n–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫: –ö–∞—Ä–¥–∏–æ 30 –º–∏–Ω\n–í—Ç–æ—Ä–Ω–∏–∫: –°–∏–ª–æ–≤–∞—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞\n–°—Ä–µ–¥–∞: –ô–æ–≥–∞ –∏ —Ä–∞—Å—Ç—è–∂–∫–∞\n–ß–µ—Ç–≤–µ—Ä–≥: –ë–µ–≥ 5 –∫–º\n–ü—è—Ç–Ω–∏—Ü–∞: –ü–ª–∞–≤–∞–Ω–∏–µ\n–í—ã—Ö–æ–¥–Ω—ã–µ: –ê–∫—Ç–∏–≤–Ω—ã–π –æ—Ç–¥—ã—Ö", 
      date: "2025-06-14" 
    },
  ]);

  const [viewNote, setViewNote] = useState(null);
  const [editNote, setEditNote] = useState(null);
  const [editTitle, setEditTitle] = useState("");
  const [editContent, setEditContent] = useState("");

  useEffect(() => {
    const storedUsername = localStorage.getItem('username');
    setUsername(storedUsername || "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å");
  }, []);

  const handleView = (note) => {
    setViewNote(note);
    setEditNote(null);
  };

  const handleEdit = (note) => {
    setEditNote(note);
    setEditTitle(note.title);
    setEditContent(note.content);
    setViewNote(null);
  };

  const handleSaveEdit = () => {
    if (editTitle.trim() && editContent.trim()) {
      setNotes(notes.map(note => 
        note.id === editNote.id 
          ? { 
              ...note, 
              title: editTitle.trim(), 
              content: editContent.trim(), 
              date: new Date().toISOString().split('T')[0] 
            }
          : note
      ));
      setEditNote(null);
      setEditTitle("");
      setEditContent("");
    }
  };

  const handleCancelEdit = () => {
    setEditNote(null);
    setEditTitle("");
    setEditContent("");
  };

  const handleDelete = (noteId) => {
    if (window.confirm("–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç—É –∑–∞–º–µ—Ç–∫—É?")) {
      setNotes(notes.filter(note => note.id !== noteId));
      if (viewNote && viewNote.id === noteId) setViewNote(null);
      if (editNote && editNote.id === noteId) setEditNote(null);
    }
  };

  const formatDate = (dateString) => {
    const date = new Date(dateString);
    return date.toLocaleDateString('ru-RU', {
      year: 'numeric',
      month: 'long',
      day: 'numeric'
    });
  };

  const closeModal = () => {
    setViewNote(null);
    setEditNote(null);
    setEditTitle("");
    setEditContent("");
  };

  const handleGoHome = () => {
    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å React Router –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    // –î–ª—è –ø—Ä–∏–º–µ—Ä–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º window.location
    window.location.href = '/';
  };

  return (
    <div className="personal-account-container">
      {/* –ö–Ω–æ–ø–∫–∞ –¥–æ–º–æ–π */}
      <button onClick={handleGoHome} className="home-button">
        <HomeIcon />
        –ù–∞ –≥–ª–∞–≤–Ω—É—é
      </button>

      <div className="account-wrapper">
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
        <div className="account-header">
          <h1 className="account-title">–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç</h1>
          <p className="account-subtitle">
            –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {username}!
          </p>
        </div>

        {/* –°–µ–∫—Ü–∏—è –∑–∞–º–µ—Ç–æ–∫ */}
        <div className="notes-section">
          <div className="notes-header">
            <h2 className="notes-title">–í–∞—à–∏ –∑–∞–º–µ—Ç–∫–∏</h2>
            <span className="notes-count">{notes.length}</span>
          </div>

          {notes.length === 0 ? (
            <div className="empty-state">
              <div className="empty-state-icon">üìù</div>
              <p>–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∑–∞–º–µ—Ç–æ–∫</p>
            </div>
          ) : (
            <div className="notes-grid">
              {notes.map(note => (
                <div key={note.id} className="note-card">
                  <div className="note-header">
                    <h3 className="note-title">{note.title}</h3>
                    <div className="note-actions">
                      <button 
                        onClick={() => handleView(note)}
                        className="action-btn view"
                        title="–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å"
                      >
                        <ViewIcon />
                      </button>
                      <button 
                        onClick={() => handleEdit(note)}
                        className="action-btn edit"
                        title="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å"
                      >
                        <EditIcon />
                      </button>
                      <button 
                        onClick={() => handleDelete(note.id)}
                        className="action-btn delete"
                        title="–£–¥–∞–ª–∏—Ç—å"
                      >
                        <DeleteIcon />
                      </button>
                    </div>
                  </div>
                  <p className="note-content">{note.content}</p>
                  <div className="note-date">
                    –°–æ–∑–¥–∞–Ω–æ: {formatDate(note.date)}
                  </div>
                </div>
              ))}
            </div>
          )}
        </div>
      </div>

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ */}
      {viewNote && (
        <div className="modal-overlay" onClick={closeModal}>
          <div className="modal-content" onClick={(e) => e.stopPropagation()}>
            <div className="modal-header">
              <h3 className="modal-title">{viewNote.title}</h3>
              <button onClick={closeModal} className="close-btn">
                <CloseIcon />
              </button>
            </div>
            <div className="modal-body">
              <div className="view-content">{viewNote.content}</div>
              <div className="view-date">
                –°–æ–∑–¥–∞–Ω–æ: {formatDate(viewNote.date)}
              </div>
            </div>
          </div>
        </div>
      )}

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è */}
      {editNote && (
        <div className="modal-overlay" onClick={closeModal}>
          <div className="modal-content" onClick={(e) => e.stopPropagation()}>
            <div className="modal-header">
              <h3 className="modal-title">–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∑–∞–º–µ—Ç–∫—É</h3>
              <button onClick={closeModal} className="close-btn">
                <CloseIcon />
              </button>
            </div>
            <div className="modal-body">
              <div className="form-group">
                <label htmlFor="edit-title" className="form-label">
                  –ó–∞–≥–æ–ª–æ–≤–æ–∫:
                </label>
                <input
                  id="edit-title"
                  type="text"
                  value={editTitle}
                  onChange={(e) => setEditTitle(e.target.value)}
                  className="form-input"
                  placeholder="–í–≤–µ–¥–∏—Ç–µ –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∑–∞–º–µ—Ç–∫–∏"
                />
              </div>
              <div className="form-group">
                <label htmlFor="edit-content" className="form-label">
                  –°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ:
                </label>
                <textarea
                  id="edit-content"
                  value={editContent}
                  onChange={(e) => setEditContent(e.target.value)}
                  className="form-textarea"
                  placeholder="–í–≤–µ–¥–∏—Ç–µ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –∑–∞–º–µ—Ç–∫–∏"
                  rows="8"
                />
              </div>
            </div>
            <div className="modal-actions">
              <button onClick={handleCancelEdit} className="btn btn-secondary">
                –û—Ç–º–µ–Ω–∞
              </button>
              <button onClick={handleSaveEdit} className="btn btn-primary">
                –°–æ—Ö—Ä–∞–Ω–∏—Ç—å
              </button>
            </div>
          </div>
        </div>
      )}
    </div>
  );
}

export default PersonalAccount;